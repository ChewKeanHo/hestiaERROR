echo \" <<'RUN_AS_BATCH' >/dev/null ">NUL "\" \`" <#"
@ECHO OFF
REM LICENSE CLAUSES HERE
REM ----------------------------------------------------------------------------




REM ############################################################################
REM # Windows BATCH Codes                                                      #
REM ############################################################################
where /q powershell
if errorlevel 1 (
        echo "ERROR: missing powershell facility."
        exit /b 1
)

copy /Y "%~nx0" "%~n0.ps1" >nul
timeout /t 1 /nobreak >nul
powershell -executionpolicy remotesigned -Command "& '.\%~n0.ps1' %*"
start /b "" cmd /c del "%~f0" & exit /b %errorcode%
REM ############################################################################
REM # Windows BATCH Codes                                                      #
REM ############################################################################
RUN_AS_BATCH
#> | Out-Null




echo \" <<'RUN_AS_POWERSHELL' >/dev/null # " | Out-Null
################################################################################
# Windows POWERSHELL Codes                                                     #
################################################################################
. "${env:LIBS_HESTIA}\hestiaFS\Vanilla.sh.ps1"
. "${env:LIBS_HESTIA}\hestiaKERNEL\Error_Codes.sh.ps1"
. "${env:LIBS_HESTIA}\hestiaSTRING\Is_Empty.sh.ps1"




function hestiaCITATION-Assemble {
        param(
                [string]$___filepath,
                [string]$___abstract_filepath,
                [string]$___citation_filepath,
                [string]$___cff_version,
                [string]$___type,
                [string]$___date,
                [string]$___title,
                [string]$___version,
                [string]$___license,
                [string]$___repo,
                [string]$___repo_code,
                [string]$___repo_artifact,
                [string]$___contact_name,
                [string]$___contact_website,
                [string]$___contact_email
        )


        # validate input
        if ($(hestiaSTRING-Is-Empty $___cff_version) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_OK} # disabled by explicit request
        }

        if ($(hestiaSTRING-Is-Empty $___filepath) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_ENTITY_EMPTY}
        }

        if ($(hestiaSTRING-Is-Empty $___abstract_filepath) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_EMPTY}
        }

        if ($(hestiaSTRING-Is-Empty $___citation_filepath) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_EMPTY}
        }

        if ($(hestiaFS-Is-File $___filepath) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_ENTITY_EXIST}
        }

        if ($(hestiaFS-Is-File $___abstract_filepath) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_IS_NOT_FILE}
        }

        if ($(hestiaFS-Is-File $___citation_filepath) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_IS_NOT_FILE}
        }

        if ($(hestiaSTRING-Is-Empty $___type) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_EMPTY}
        }

        if ($(hestiaSTRING-Is-Empty $___title) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_DATA_EMPTY}
        }


        # execute
        $null = hestiaFS-Create-Directory "$(hestiaFS-Get-Directory $___filepath)"


        $___process = hestiaFS-Write-File $___filepath @"
# WARNING: auto-generated by AutomataCI

cff-version: `"${___cff_version}`"
type: `"${___type}`"

"@
        if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
        }


        # write date field
        if ($(hestiaSTRING-Is-Empty $___date) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
date-released: "${___date}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write title field
        if ($(STRINGS-Is-Empty $___title) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
title: "${___title}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write version field
        if ($(hestiaSTRING-Is-Empty $___version) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
version: "${___version}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write license field
        if ($(hestiaSTRING-Is-Empty $___license) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
license: "${___license}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write repository field
        if ($(hestiaSTRING-Is-Empty $___repo) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
repository: "${___repo}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write repository code field
        if ($(hestiaSTRING-Is-Empty $___repo_code) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
repository-code: "${___repo_code}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write repository artifact field
        if ($(hestiaSTRING-Is-Empty $___repo_artifact) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
repository-artifact: "${___repo_artifact}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write url field
        if ($(hestiaSTRING-Is-Empty $___contact_website) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                $___process = hestiaFS-Append-File $___filepath @"
url: "${___contact_website}"

"@
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # write contact field
        if ($(hestiaSTRING-Is-Empty $___contact_name) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                if (
                        ($(hestiaSTRING-Is-Empty $___contact_website) -ne ${env:hestiaKERNEL_ERROR_OK}) -or
                        ($(hestiaSTRING-Is-Empty $___contact_email) -ne ${env:hestiaKERNEL_ERROR_OK})
                ) {
                        $___process = hestiaFS-Append-File $___filepath @"
contact:
  - affiliation: "${___contact_name}"

"@
                        if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                                return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                        }


                        # write contact email field
                        if ($(hestiaSTRING-Is-Empty $___contact_email) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                                $___process = hestiaFS-Append-File $___filepath @"
    email: "${___contact_email}"

"@
                                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                                }
                        }


                        # write contact website field
                        if ($(hestiaSTRING-Is-Empty $___contact_website) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                                $___process = hestiaFS-Append-File $___filepath @"
    website: "${___contact_website}"

"@
                                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                                }
                        }
                }
        }


        # write abstract field
        $___process = hestiaFS-Append-File $___filepath @"
abstract: |-

"@
        if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
        }

        foreach ($___line in (Get-Content $___abstract_filepath)) {
                if (
                        ($(hestiaSTRING-Is-Empty $___line) -ne ${env:hestiaKERNEL_ERROR_OK}) -and
                        ($(hestiaSTRING-Is-Empty "$($___line -replace "#.*$", '')") -eq ${env:hestiaKERNEL_ERROR_OK})
                ) {
                        continue
                }

                $___line = $___line -replace '#.*', ''
                if ($(hestiaSTRING-Is-Empty $___line) -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        $___line = "  ${___line}"
                }

                $___process = hestiaFS-Append-File $___filepath "${___line}`n"
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return 1
                }
        }


        # append remaining fields from citation_filepath
        foreach ($___line in (Get-Content $___citation_filepath)) {
                if (
                        ($(hestiaSTRING-Is-Empty $___line) -ne ${env:hestiaKERNEL_ERROR_OK}) -and
                        ($(hestiaSTRING-Is-Empty "$($___line -replace "#.*$", '')") -eq ${env:hestiaKERNEL_ERROR_OK})
                ) {
                        continue
                }

                $___line = $___line -replace '#.*', ''
                if ($(STRINGS-Is-Empty $___line) -eq ${env:hestiaKERNEL_ERROR_OK}) {
                        continue
                }

                $___process = hestiaFS-Append-File $___filepath "${___line}`n"
                if ($___process -ne ${env:hestiaKERNEL_ERROR_OK}) {
                        return ${env:hestiaKERNEL_ERROR_BAD_EXEC}
                }
        }


        # report status
        return ${env:hestiaKERNEL_ERROR_OK}
}
################################################################################
# Windows POWERSHELL Codes                                                     #
################################################################################
return
<#
RUN_AS_POWERSHELL




################################################################################
# Unix Main Codes                                                              #
################################################################################
. "${LIBS_HESTIA}/hestiaFS/Vanilla.sh.ps1"
. "${LIBS_HESTIA}/hestiaKERNEL/Error_Codes.sh.ps1"
. "${LIBS_HESTIA}/hestiaSTRING/Is_Empty.sh.ps1"




hestiaCITATION_Assemble() {
        #___filepath="$1"
        #___abstract_filepath="$2"
        #___citation_filepath="$3"
        #___cff_version="$4"
        #___type="$5"
        #___date="$6"
        #___title="$7"
        #___version="$8"
        #___license="$9"
        #___repo="${10}"
        #___repo_code="${11}"
        #___repo_artifact="${12}"
        #___contact_name="${13}"
        #___contact_website="${14}"
        #___contact_email="${15}"


        # validate input
        if [ $(hestiaSTRING_Is_Empty "$4") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_OK # disabled by explicit request
        fi

        if [ $(hestiaSTRING_Is_Empty "$1") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_ENTITY_EMPTY
        fi

        if [ $(hestiaSTRING_Is_Empty "$2") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_EMPTY
        fi

        if [ $(hestiaSTRING_Is_Empty "$3") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_EMPTY
        fi

        if [ $(hestiaFS_Is_File "$1") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_ENTITY_EXIST
        fi

        if [ $(hestiaFS_Is_File "$2") -ne $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_IS_NOT_FILE
        fi

        if [ $(hestiaFS_Is_File "$3") -ne $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_IS_NOT_FILE
        fi

        if [ $(hestiaSTRING_Is_Empty "$5") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_EMPTY
        fi

        if [ $(hestiaSTRING_Is_Empty "$7") -eq $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_DATA_EMPTY
        fi


        # execute
        # write compulsory fields
        hestiaFS_Create_Directory "$(hestiaFS_Get_Directory "$1")"
        hestiaFS_Write_File "$1" "\
# WARNING: auto-generated by AutomataCI

cff-version: \"${4}\"
type: \"${5}\"
"
        if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_BAD_EXEC
        fi


        # write date field
        if [ $(hestiaSTRING_Is_Empty "$6") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
date-released: \"${6}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write title field
        if [ $(hestiaSTRING_Is_Empty "$7") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
title: \"${7}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write version field
        if [ $(hestiaSTRING_Is_Empty "$8") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
version: \"${8}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write license field
        if [ $(hestiaSTRING_Is_Empty "$9") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
license: \"${9}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write repository field
        if [ $(hestiaSTRING_Is_Empty "${10}") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
repository: \"${10}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write repository code field
        if [ $(hestiaSTRING_Is_Empty "${11}") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
repository-code: \"${11}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write repository artifact field
        if [ $(hestiaSTRING_Is_Empty "${12}") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
repository-artifact: \"${12}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write url field
        if [ $(hestiaSTRING_Is_Empty "${14}") -ne $hestiaKERNEL_ERROR_OK ]; then
                hestiaFS_Append_File "$1" "\
url: \"${14}\"
"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        fi


        # write contact field
        if [ $(hestiaSTRING_Is_Empty "${13}") -ne $hestiaKERNEL_ERROR_OK ]; then
                if [ $(hestiaSTRING_Is_Empty "${14}") -ne $hestiaKERNEL_ERROR_OK ] ||
                [ $(hestiaSTRING_Is_Empty "${15}") -ne $hestiaKERNEL_ERROR_OK ]; then
                        hestiaFS_Append_File "$1" "\
contact:
  - affiliation: \"${13}\"
"
                        if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                                return $hestiaKERNEL_ERROR_BAD_EXEC
                        fi


                        # write contact email field
                        if [ $(hestiaSTRING_Is_Empty "${15}") -ne $hestiaKERNEL_ERROR_OK ]; then
                                hestiaFS_Append_File "$1" "\
    email: \"${15}\"
"
                                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                                        return $hestiaKERNEL_ERROR_BAD_EXEC
                                fi
                        fi


                        # write contact website field
                        if [ $(hestiaSTRING_Is_Empty "${14}") -ne $hestiaKERNEL_ERROR_OK ]; then
                                hestiaFS_Append_File "$1" "\
    website: \"${14}\"
"
                                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                                        return $hestiaKERNEL_ERROR_BAD_EXEC
                                fi
                        fi
                fi
        fi


        # write abstract field
        hestiaFS_Append_File "$1" "\
abstract: |-
"
        if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                return $hestiaKERNEL_ERROR_BAD_EXEC
        fi

        ___old_IFS="$IFS"
        while IFS="" read -r ___line || [ -n "$___line" ]; do
                if [ $(hestiaSTRING_Is_Empty "$___line") -ne $hestiaKERNEL_ERROR_OK ] &&
                [ $(hestiaSTRING_Is_Empty "${___line%%#*}") -eq $hestiaKERNEL_ERROR_OK ]; then
                        continue
                fi

                ___line="${___line%%#*}"
                if [ $(hestiaSTRING_Is_Empty "$___line") -ne $hestiaKERNEL_ERROR_OK ]; then
                        ___line="  ${___line}"
                fi

                hestiaFS_Append_File "$1" "${___line}\n"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        done < "$2"
        IFS="$___old_IFS" && unset ___old_IFS


        # append remaining fields from citation_filepath
        ___old_IFS="$IFS"
        while IFS="" read -r ___line || [ -n "$___line" ]; do
                if [ $(hestiaSTRING_Is_Empty "$___line") -ne $hestiaKERNEL_ERROR_OK ] &&
                [ $(hestiaSTRING_Is_Empty "${___line%%#*}") -eq $hestiaKERNEL_ERROR_OK ]; then
                        continue
                fi

                ___line="${___line%%#*}"
                if [ $(hestiaSTRING_Is_Empty "$___line") -eq $hestiaKERNEL_ERROR_OK ]; then
                        continue
                fi

                hestiaFS_Append_File "$1" "${___line}\n"
                if [ $? -ne $hestiaKERNEL_ERROR_OK ]; then
                        return $hestiaKERNEL_ERROR_BAD_EXEC
                fi
        done < "$3"
        IFS="$___old_IFS" && unset ___old_IFS


        # report status
        return $hestiaKERNEL_ERROR_OK
}
################################################################################
# Unix Main Codes                                                              #
################################################################################
return 0
#>
